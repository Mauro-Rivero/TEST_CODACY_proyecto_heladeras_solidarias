@startuml distribuir_viandas_colaborar
actor Colaborador_Usuario as User
boundary INTERFAZ
control CONTROLLER
entity "Colaborador" as Colaborador
entity "DistribucionViandasCreator" as DistribucionViandasCreator

User -> INTERFAZ: Solicitar colaborar (DistribucionViandasCreator, fechaContribucion, origen, destino, cantidadViandasAMover, motivo)
INTERFAZ -> CONTROLLER: Solicitar colaborar (DistribucionViandasCreator, fechaContribucion, origen, destino, cantidadViandasAMover, motivo)
CONTROLLER -> Colaborador: colaborar(DistribucionViandasCreator, fechaContribucion, origen, destino, cantidadViandasAMover, motivo)
Colaborador -> Colaborador: esCreatorPermitido(DistribucionViandasCreator.getClass())
alt Creator permitido
    Colaborador -> DistribucionViandasCreator: crearContribucion(colaborador, fechaContribucion, paraMigrar, origen, destino, cantidadViandasAMover, motivo)
    DistribucionViandasCreator -> Colaborador: new DistribucionViandas(colaborador, fechaContribucion, origen, destino, cantidadViandasAMover, motivo)
    Colaborador -> Colaborador: agregarContribucionPendiente(distribucionViandas)
    Colaborador --> CONTROLLER: Distribuci칩n de Viandas creada
    CONTROLLER --> INTERFAZ: Distribuci칩n de Viandas creada
    INTERFAZ --> User: Distribuci칩n de Viandas creada
else Creator no permitido
    Colaborador --> CONTROLLER: Error
    CONTROLLER --> INTERFAZ: Error
    INTERFAZ --> User: No es una forma v치lida de colaborar
end
@enduml